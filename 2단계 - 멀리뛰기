풀이방법
1,2,3,5,8 처럼 쭉 진행되는 피보나치 수열과 같음 
즉 N-1과 N-2를 더한값이 N이 됨

이렇게 되면 오버플로우현상이 나타나 오류가 발생함
func solution(_ n:Int) -> Int {
    var array = [1,2]
    if n > 2 {
        for i in 3...n{
            array.append(array[i-3] + array[i-2]) 
        }
    }
    return n == 1 ? 1 : n == 2 ? 2 : array[n-1] % 1234567
}

해결방법)
append를 하고 추후에 그 요소의 값을 연산하여 리턴하는 것보다
요소를 미리 지정해 놓고 미리 연산하여 변경하면 오버플로우 문제 해결가능함


func solution(_ n:Int) -> Int {
    var array = [1,2,0]
    if n > 2 {
        for i in 3...n{
            array.append(0)
            array[i-1] = (array[i-3] + array[i-2]) % 1234567
        }
    }
    return n == 1 ? 1 : n == 2 ? 2 : array[n-1]
}
