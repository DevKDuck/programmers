음양 더하기
문제 설명
어떤 정수들이 있습니다. 이 정수들의 절댓값을 차례대로 담은 정수 배열 absolutes와 이 정수들의 부호를 차례대로 담은 불리언 배열 signs가 매개변수로 주어집니다. 실제 정수들의 합을 구하여 return 하도록 solution 함수를 완성해주세요.

제한사항
absolutes의 길이는 1 이상 1,000 이하입니다.
absolutes의 모든 수는 각각 1 이상 1,000 이하입니다.
signs의 길이는 absolutes의 길이와 같습니다.
signs[i] 가 참이면 absolutes[i] 의 실제 정수가 양수임을, 그렇지 않으면 음수임을 의미합니다.
입출력 예
absolutes	signs	result
[4,7,12]	[true,false,true]	9
[1,2,3]	[false,false,true]	0
입출력 예 설명
입출력 예 #1

signs가 [true,false,true] 이므로, 실제 수들의 값은 각각 4, -7, 12입니다.
따라서 세 수의 합인 9를 return 해야 합니다.
입출력 예 #2

signs가 [false,false,true] 이므로, 실제 수들의 값은 각각 -1, -2, 3입니다.
따라서 세 수의 합인 0을 return 해야 합니다.


풀이방법

1. 반환하는 result 변수를 0으로 선언및 초기화해준다 

2. for in 반복문을 이용하여 absolutes 배열 인덱스에 접근해  모든 수를 result에 더한다. 

이때 범위연산자는 인덱스이므로 0부터 absoultes.count보다 1작은 범위를 설정해준다.

3. result에 더하기 전에 if 조건문으로 signs 배열의 값이 true면 result에 그대로 더하고

false면(else) -1를 곱해 result에 더하도록 한다. 

 

import Foundation

func solution(_ absolutes:[Int], _ signs:[Bool]) -> Int {
    var result = 0
    for i in 0..<absolutes.count{
        if signs[i] == true {
           result += absolutes[i]
        }else{
            result += -(absolutes[i])
        }
    }
    return result
}
